"""create bookings table

Revision ID: a1b2c3d4e5f6
Revises: 2ba25ee72bd4
Create Date: 2024-12-27 10:00:00.000000

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a1b2c3d4e5f6"
down_revision = "2ba25ee72bd4"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bookings",
        sa.Column(
            "booking_id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("hotel", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("room", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "CONFIRMED", "CANCELLED", "COMPLETED", name="bookingstatus"
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["hotel"],
            ["hotels.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room"],
            ["rooms.id"],
        ),
        sa.PrimaryKeyConstraint("booking_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("bookings")
    op.execute("DROP TYPE IF EXISTS bookingstatus")
    # ### end Alembic commands ###
