"""add_booking_dates_and_guests

Revision ID: ad43ba410fec
Revises: a1b2c3d4e5f6
Create Date: 2025-08-20 17:04:12.886180

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ad43ba410fec"
down_revision: Union[str, Sequence[str], None] = "a1b2c3d4e5f6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns with temporary nullable=True first
    op.add_column("bookings", sa.Column("check_in_date", sa.Date(), nullable=True))
    op.add_column("bookings", sa.Column("check_out_date", sa.Date(), nullable=True))
    op.add_column(
        "bookings",
        sa.Column("guests", sa.Integer(), nullable=False, server_default="1"),
    )

    # Set default values for existing records (using current date as placeholder)
    op.execute(
        "UPDATE bookings SET check_in_date = CURRENT_DATE WHERE check_in_date IS NULL"
    )
    op.execute(
        "UPDATE bookings SET check_out_date = CURRENT_DATE + INTERVAL '1 day' WHERE check_out_date IS NULL"
    )

    # Now make the date columns non-nullable
    op.alter_column("bookings", "check_in_date", nullable=False)
    op.alter_column("bookings", "check_out_date", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("bookings", "guests")
    op.drop_column("bookings", "check_out_date")
    op.drop_column("bookings", "check_in_date")
    # ### end Alembic commands ###
